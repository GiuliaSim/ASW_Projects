VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    # Configurazioni comuni.

    # Ubuntu 16.04 LTS 64 bit VirtualBox (Bento)
    config.vm.box = "bento/ubuntu-16.04"
    # config.vm.box_url = "https://app.vagrantup.com/bento/boxes/ubuntu-16.04"

    # folder per i progetti Asw (/home/asw/projects)
    config.vm.synced_folder "../../proj/", "/home/asw/projects", :mount_options => ["dmode=777", "fmode=777"]

    # folder per le risorse condivise per gli ambienti Asw (/home/asw/_shared/resources e /home/asw/_shared/scripts) 
    config.vm.synced_folder "../_shared/", "/home/asw/_shared", :mount_options => ["dmode=777", "fmode=777"]

    #
    # Configurazione del nodo "Client": 
    #
    config.vm.define "Client" do |node|
        node.vm.hostname = "Client"    

        node.vm.provider "virtualbox" do |v| 
            v.memory = 1024 
			v.cpus = 1
        end 

	node.vm.network "private_network", ip: "10.11.1.112", virtualbox__intnet: true
	
        # riusa gli stessi numeri di porta di Client, 
        # supponendo che non sia usato localmente 
    #node.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
        # node.vm.network "forwarded_port", guest: 8181, host: 8181
        # node.vm.network "forwarded_port", guest: 4848, host: 4848
		
		node.vm.network "forwarded_port", guest: 22, host: 2222, id: 'ssh', auto_correct: true
        node.ssh.forward_agent = true
    ### node.vm.network "forwarded_port", guest: 8080, host: 8088, id: 'http', auto_correct: true
	

        # provisioning con bash 
        node.vm.provision :shell, :inline => 'sudo apt-get update'
        # node.vm.provision :shell, :inline => 'apt-get install unzip'
	
		# il server deve avere "10.11.1.111 Glassfish" nel file /etc/hosts, 
		# altrimenti un client remoto non riesce ad accedere al server java ee 
        
		
        node.vm.provision :shell, path: "../_shared/scripts/setup-java.sh"
		node.vm.provision :shell, path: "../_shared/scripts/setup-maven.sh"
        #node.vm.provision :shell, path: "../_shared/scripts/setup-Client.sh"
		#node.vm.provision :shell, path: "../_shared/scripts/crea-Client.sh"
		#node.vm.provision :shell, path: "../_shared/scripts/avvia-Client.sh", run: "always"
		#node.vm.provision :shell, :inline => 'sudo /home/asw/server/bin/Client-service start', run: "always"
		
        
		# crea un link simbolico alla cartella dei progetti asw nella cartella dell'utente di default 
        node.vm.provision :shell, :inline => 'ln -s /home/asw/projects projects'
	
  
        node.vm.provision :shell, 
            inline: "echo  'configurazione nodo completata'"
			
		
		
    end
    

end